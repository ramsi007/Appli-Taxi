#pragma checksum "C:\Users\Oujdi\Desktop\Projet C#\Projet C#\ASP.NET Core\Application-Taxi\Appli-taxi\Areas\Customer\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "8c66175a2d031fec5c296c923ff1f9ab680443ab"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Customer_Views_Home_Index), @"mvc.1.0.view", @"/Areas/Customer/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Oujdi\Desktop\Projet C#\Projet C#\ASP.NET Core\Application-Taxi\Appli-taxi\Areas\Customer\Views\_ViewImports.cshtml"
using Appli_Taxi;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Oujdi\Desktop\Projet C#\Projet C#\ASP.NET Core\Application-Taxi\Appli-taxi\Areas\Customer\Views\_ViewImports.cshtml"
using Appli_Taxi.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Oujdi\Desktop\Projet C#\Projet C#\ASP.NET Core\Application-Taxi\Appli-taxi\Areas\Customer\Views\_ViewImports.cshtml"
using Appli_Taxi.Models.ViewModels;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Oujdi\Desktop\Projet C#\Projet C#\ASP.NET Core\Application-Taxi\Appli-taxi\Areas\Customer\Views\_ViewImports.cshtml"
using Appli_Taxi.Utility;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8c66175a2d031fec5c296c923ff1f9ab680443ab", @"/Areas/Customer/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e3c0fb33f32f4e9797dadeff098754edc3ea8e84", @"/Areas/Customer/Views/_ViewImports.cshtml")]
    public class Areas_Customer_Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\Oujdi\Desktop\Projet C#\Projet C#\ASP.NET Core\Application-Taxi\Appli-taxi\Areas\Customer\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";
    Layout = "~/Views/Shared/_AdminLTE.cshtml";


#line default
#line hidden
#nullable disable
            WriteLiteral(@"

<script src=""https://code.highcharts.com/highcharts.js""></script>
<script src=""https://code.highcharts.com/modules/exporting.js""></script>
<script src=""https://code.highcharts.com/modules/export-data.js""></script>
<script src=""https://code.highcharts.com/modules/accessibility.js""></script>


<div class=""row mb-5 ml-3 mt-3"">
    <div class=""col-md-3 icon"">
        <i class=""fas fa-users bg-success text-light p-3 icon-box""></i>
        <span class=""text-primary font-weight-bold"">Total Clients</span>
        <span class=""icon-count"">");
#nullable restore
#line 18 "C:\Users\Oujdi\Desktop\Projet C#\Projet C#\ASP.NET Core\Application-Taxi\Appli-taxi\Areas\Customer\Views\Home\Index.cshtml"
                            Write(ViewBag.Customer.Count);

#line default
#line hidden
#nullable disable
            WriteLiteral("</span>\r\n    </div>\r\n    <div class=\"col-md-3 offset-md-1 icon\">\r\n        <i class=\"fas fa-people-arrows bg-danger text-light p-3 icon-box\"></i>\r\n        <span class=\"text-info font-weight-bold\">Total Fournisseurs</span>\r\n        <span class=\"icon-count\">");
#nullable restore
#line 23 "C:\Users\Oujdi\Desktop\Projet C#\Projet C#\ASP.NET Core\Application-Taxi\Appli-taxi\Areas\Customer\Views\Home\Index.cshtml"
                            Write(ViewBag.Vendor.Count);

#line default
#line hidden
#nullable disable
            WriteLiteral("</span>\r\n    </div>\r\n    <div class=\"col-md-3 offset-md-1 icon\">\r\n        <i class=\"fas fa-user-tie bg-info text-light p-3 icon-box\"></i>\r\n        <span class=\"text-success font-weight-bold\">Total Employées</span>\r\n        <span class=\"icon-count\">");
#nullable restore
#line 28 "C:\Users\Oujdi\Desktop\Projet C#\Projet C#\ASP.NET Core\Application-Taxi\Appli-taxi\Areas\Customer\Views\Home\Index.cshtml"
                            Write(ViewBag.Employee.Count);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</span>
    </div>
</div>

<div class=""row mb-5 ml-3 mt-3"">
    <div class=""col-md-3 icon"">
        <i class=""fas fa-money-check-alt bg-secondary text-light p-3 icon-box""></i>
        <span class=""text-warning font-weight-bold ml-2"">Total Devis</span>
        <span class=""icon-count"">");
#nullable restore
#line 36 "C:\Users\Oujdi\Desktop\Projet C#\Projet C#\ASP.NET Core\Application-Taxi\Appli-taxi\Areas\Customer\Views\Home\Index.cshtml"
                            Write(ViewBag.Proposal.Count);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</span>
    </div>
    <div class=""col-md-3 offset-md-1""></div>
    <div class=""col-md-3 offset-md-1 icon"">
        <i class=""fas fa-database bg-primary text-light p-3 icon-box""></i>
        <span class=""text-secondary font-weight-bold ml-2"">Total Factures</span>
        <span class=""icon-count"">");
#nullable restore
#line 42 "C:\Users\Oujdi\Desktop\Projet C#\Projet C#\ASP.NET Core\Application-Taxi\Appli-taxi\Areas\Customer\Views\Home\Index.cshtml"
                            Write(ViewBag.Bill.Count);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</span>
    </div>
</div>

<div>
    <figure class=""highcharts-figure"">
        <div id=""pieChart""></div>
        <p class=""mb-5""></p>
    </figure>

    <figure class=""highcharts-figure mt-5"">
        <div id=""lineIncomeChart""></div>
        <p class=""mb-5""></p>
    </figure>

    <figure class=""highcharts-figure mt-5"">
        <div id=""lineDepenseChart""></div>
        <p class=""mb-5""></p>
    </figure>
</div>


<script>
    $(document).ready(function () {
        $.getJSON(""/Customer/Home/GetBillsByStatus"", function (data) {
            Highcharts.chart('pieChart', {
                chart: {
                    plotBackgroundColor: null,
                    plotBorderWidth: null,
                    plotShadow: false,
                    type: 'pie'
                },
                title: {
                    text: 'Taux de facturation par Statut'
                },
                tooltip: {
                    pointFormat: '{series.name}: <b>{point.percentage:.1f}%</");
            WriteLiteral(@"b>'
                },
                accessibility: {
                    point: {
                        valueSuffix: '%'
                    }
                },
                plotOptions: {
                    pie: {
                        allowPointSelect: true,
                        cursor: 'pointer',
                        dataLabels: {
                            enabled: true,
                            format: '<b>{point.name}</b>: {point.percentage:.1f} %'
                        }
                    }
                },
                series: [{
                    name: 'Taux',
                    colorByPoint: true,
                    data: [{
                        name: 'Payé',
                        y: data.paidBills
                    }, {
                        name: 'Non payé',
                        y: data.notPaidBills
                    }, {
                        name: 'Partiellement payé',
                        y: data.prePaidBills
   ");
            WriteLiteral(@"                 }]
                }]
            });
        });
    });
</script>

<script>
    $(document).ready(function () {
        $.getJSON(""/Customer/Home/GetIncomeAmount"", function (data) {
            var mounths = []
            var paids = []
            var dt = new Date();
            for (var i = 0; i < data.length; i++) {
                paids.push(data[i].count);
                switch (data[i].mounth) {
                    case 1:
                        mounths.push(""Jan"");
                        break;
                    case 2:
                        mounths.push(""Fev"");
                        break;
                    case 3:
                        mounths.push(""Mars"");
                        break;
                    case 4:
                        mounths.push(""Avr"");
                        break;
                    case 5:
                        mounths.push(""Mai"");
                        break;
                    case 6:
                ");
            WriteLiteral(@"        mounths.push(""Juin"");
                        break;
                    case 7:
                        mounths.push(""Juil"");
                        break;
                    case 8:
                        mounths.push(""Août"");
                        break;
                    case 9:
                        mounths.push(""Sept"");
                        break;
                    case 10:
                        mounths.push(""Oct"");
                        break;
                    case 11:
                        mounths.push(""Nov"");
                        break;
                    case 12:
                        mounths.push(""Dec"");
                        break;
                }
            }
            Highcharts.chart('lineIncomeChart', {
                chart: {
                    type: 'line'
                },
                title: {
                    text: 'Montant des revenues par mois'
                },
                subtitle: {
              ");
            WriteLiteral(@"      text: 'Année en cours : ' + dt.getUTCFullYear()
                },
                xAxis: {
                    categories: mounths
                },
                yAxis: {
                    title: {
                        text: 'REVENUES EN (€)'
                    }
                },
                plotOptions: {
                    line: {
                        dataLabels: {
                            enabled: false
                        },
                        enableMouseTracking: false
                    }
                },
                series: [{
                    name: 'Montant',
                    data: paids
                }]
            });
        });
    });
</script>

<script>
    $(document).ready(function () {
        $.getJSON(""/Customer/Home/GetDepenseAmount"", function (data) {
            var mounths = []
            var paids = []
            var dt = new Date();
            for (var i = 0; i < data.length; i++) {
            ");
            WriteLiteral(@"    paids.push(data[i].count);
                switch (data[i].mounth) {
                    case 1:
                        mounths.push(""Jan"");
                        break;
                    case 2:
                        mounths.push(""Fev"");
                        break;
                    case 3:
                        mounths.push(""Mars"");
                        break;
                    case 4:
                        mounths.push(""Avr"");
                        break;
                    case 5:
                        mounths.push(""Mai"");
                        break;
                    case 6:
                        mounths.push(""Juin"");
                        break;
                    case 7:
                        mounths.push(""Juil"");
                        break;
                    case 8:
                        mounths.push(""Août"");
                        break;
                    case 9:
                        mounths.push(""Sept"");
             ");
            WriteLiteral(@"           break;
                    case 10:
                        mounths.push(""Oct"");
                        break;
                    case 11:
                        mounths.push(""Nov"");
                        break;
                    case 12:
                        mounths.push(""Dec"");
                        break;
                }
            }
            Highcharts.chart('lineDepenseChart', {
                chart: {
                    type: 'line'
                },
                title: {
                    text: 'Montant des dépenses par mois'
                },
                subtitle: {
                    text: 'Année en cours : ' + dt.getUTCFullYear()
                },
                xAxis: {
                    categories: mounths
                },
                yAxis: {
                    title: {
                        text: 'DÉPENSE EN (€)'
                    }
                },
                plotOptions: {
                    line: ");
            WriteLiteral(@"{
                        dataLabels: {
                            enabled: true
                        },
                        enableMouseTracking: false
                    }
                },
                series: [{
                    name: 'Montant',
                    data: paids
                }]
            });
        });
    });
</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
